/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChefRequestDataDingniRoomsInner } from './ChefRequestDataDingniRoomsInner';
import {
    ChefRequestDataDingniRoomsInnerFromJSON,
    ChefRequestDataDingniRoomsInnerFromJSONTyped,
    ChefRequestDataDingniRoomsInnerToJSON,
} from './ChefRequestDataDingniRoomsInner';

/**
 * 
 * @export
 * @interface UploadFolderRequestData
 */
export interface UploadFolderRequestData {
    /**
     * 
     * @type {string}
     * @memberof UploadFolderRequestData
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof UploadFolderRequestData
     */
    pathId: number;
    /**
     * 
     * @type {ChefRequestDataDingniRoomsInner}
     * @memberof UploadFolderRequestData
     */
    parent?: ChefRequestDataDingniRoomsInner;
    /**
     * 
     * @type {Array<ChefRequestDataDingniRoomsInner>}
     * @memberof UploadFolderRequestData
     */
    children?: Array<ChefRequestDataDingniRoomsInner>;
    /**
     * 
     * @type {Array<ChefRequestDataDingniRoomsInner>}
     * @memberof UploadFolderRequestData
     */
    files?: Array<ChefRequestDataDingniRoomsInner>;
    /**
     * 
     * @type {string}
     * @memberof UploadFolderRequestData
     */
    path: string;
}

/**
 * Check if a given object implements the UploadFolderRequestData interface.
 */
export function instanceOfUploadFolderRequestData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "pathId" in value;
    isInstance = isInstance && "path" in value;

    return isInstance;
}

export function UploadFolderRequestDataFromJSON(json: any): UploadFolderRequestData {
    return UploadFolderRequestDataFromJSONTyped(json, false);
}

export function UploadFolderRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadFolderRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'pathId': json['pathId'],
        'parent': !exists(json, 'parent') ? undefined : ChefRequestDataDingniRoomsInnerFromJSON(json['parent']),
        'children': !exists(json, 'children') ? undefined : ((json['children'] as Array<any>).map(ChefRequestDataDingniRoomsInnerFromJSON)),
        'files': !exists(json, 'files') ? undefined : ((json['files'] as Array<any>).map(ChefRequestDataDingniRoomsInnerFromJSON)),
        'path': json['path'],
    };
}

export function UploadFolderRequestDataToJSON(value?: UploadFolderRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'pathId': value.pathId,
        'parent': ChefRequestDataDingniRoomsInnerToJSON(value.parent),
        'children': value.children === undefined ? undefined : ((value.children as Array<any>).map(ChefRequestDataDingniRoomsInnerToJSON)),
        'files': value.files === undefined ? undefined : ((value.files as Array<any>).map(ChefRequestDataDingniRoomsInnerToJSON)),
        'path': value.path,
    };
}

