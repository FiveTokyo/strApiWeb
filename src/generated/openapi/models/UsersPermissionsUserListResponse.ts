/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChefListResponseMeta } from './ChefListResponseMeta';
import {
    ChefListResponseMetaFromJSON,
    ChefListResponseMetaFromJSONTyped,
    ChefListResponseMetaToJSON,
} from './ChefListResponseMeta';
import type { UsersPermissionsUserListResponseDataInner } from './UsersPermissionsUserListResponseDataInner';
import {
    UsersPermissionsUserListResponseDataInnerFromJSON,
    UsersPermissionsUserListResponseDataInnerFromJSONTyped,
    UsersPermissionsUserListResponseDataInnerToJSON,
} from './UsersPermissionsUserListResponseDataInner';

/**
 * 
 * @export
 * @interface UsersPermissionsUserListResponse
 */
export interface UsersPermissionsUserListResponse {
    /**
     * 
     * @type {Array<UsersPermissionsUserListResponseDataInner>}
     * @memberof UsersPermissionsUserListResponse
     */
    data?: Array<UsersPermissionsUserListResponseDataInner>;
    /**
     * 
     * @type {ChefListResponseMeta}
     * @memberof UsersPermissionsUserListResponse
     */
    meta?: ChefListResponseMeta;
}

/**
 * Check if a given object implements the UsersPermissionsUserListResponse interface.
 */
export function instanceOfUsersPermissionsUserListResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UsersPermissionsUserListResponseFromJSON(json: any): UsersPermissionsUserListResponse {
    return UsersPermissionsUserListResponseFromJSONTyped(json, false);
}

export function UsersPermissionsUserListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsersPermissionsUserListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(UsersPermissionsUserListResponseDataInnerFromJSON)),
        'meta': !exists(json, 'meta') ? undefined : ChefListResponseMetaFromJSON(json['meta']),
    };
}

export function UsersPermissionsUserListResponseToJSON(value?: UsersPermissionsUserListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(UsersPermissionsUserListResponseDataInnerToJSON)),
        'meta': ChefListResponseMetaToJSON(value.meta),
    };
}

