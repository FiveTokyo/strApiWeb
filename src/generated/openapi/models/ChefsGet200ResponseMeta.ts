/* tslint:disable */
/* eslint-disable */
/**
 * test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChefsGet200ResponseMetaPagination } from './ChefsGet200ResponseMetaPagination';
import {
    ChefsGet200ResponseMetaPaginationFromJSON,
    ChefsGet200ResponseMetaPaginationFromJSONTyped,
    ChefsGet200ResponseMetaPaginationToJSON,
} from './ChefsGet200ResponseMetaPagination';

/**
 * 
 * @export
 * @interface ChefsGet200ResponseMeta
 */
export interface ChefsGet200ResponseMeta {
    /**
     * 
     * @type {ChefsGet200ResponseMetaPagination}
     * @memberof ChefsGet200ResponseMeta
     */
    pagination: ChefsGet200ResponseMetaPagination;
}

/**
 * Check if a given object implements the ChefsGet200ResponseMeta interface.
 */
export function instanceOfChefsGet200ResponseMeta(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pagination" in value;

    return isInstance;
}

export function ChefsGet200ResponseMetaFromJSON(json: any): ChefsGet200ResponseMeta {
    return ChefsGet200ResponseMetaFromJSONTyped(json, false);
}

export function ChefsGet200ResponseMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChefsGet200ResponseMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pagination': ChefsGet200ResponseMetaPaginationFromJSON(json['pagination']),
    };
}

export function ChefsGet200ResponseMetaToJSON(value?: ChefsGet200ResponseMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pagination': ChefsGet200ResponseMetaPaginationToJSON(value.pagination),
    };
}

