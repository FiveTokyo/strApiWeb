/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChefRequestDataDingniRoomsInner } from './ChefRequestDataDingniRoomsInner';
import {
    ChefRequestDataDingniRoomsInnerFromJSON,
    ChefRequestDataDingniRoomsInnerFromJSONTyped,
    ChefRequestDataDingniRoomsInnerToJSON,
} from './ChefRequestDataDingniRoomsInner';

/**
 * 
 * @export
 * @interface ChefRequestData
 */
export interface ChefRequestData {
    /**
     * 
     * @type {string}
     * @memberof ChefRequestData
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ChefRequestData
     */
    age?: number;
    /**
     * 
     * @type {Array<ChefRequestDataDingniRoomsInner>}
     * @memberof ChefRequestData
     */
    dingniRooms?: Array<ChefRequestDataDingniRoomsInner>;
}

/**
 * Check if a given object implements the ChefRequestData interface.
 */
export function instanceOfChefRequestData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChefRequestDataFromJSON(json: any): ChefRequestData {
    return ChefRequestDataFromJSONTyped(json, false);
}

export function ChefRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChefRequestData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'age': !exists(json, 'age') ? undefined : json['age'],
        'dingniRooms': !exists(json, 'dingni_rooms') ? undefined : ((json['dingni_rooms'] as Array<any>).map(ChefRequestDataDingniRoomsInnerFromJSON)),
    };
}

export function ChefRequestDataToJSON(value?: ChefRequestData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'age': value.age,
        'dingni_rooms': value.dingniRooms === undefined ? undefined : ((value.dingniRooms as Array<any>).map(ChefRequestDataDingniRoomsInnerToJSON)),
    };
}

